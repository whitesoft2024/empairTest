const mongoose = require('mongoose');
const { type } = require('os');

const SchemeSchema = new mongoose.Schema({
    SchemeName: { type: String },
    isActive: { type: String },
    invoiceNumber: { type: String },
    schemeBarCode: { type: String },
    invoiceDate: { type: Date },
    itemDescription: { type: String },
    productsData: [{
        itemCode: { type: String },
        barCode: { type: String },
        itemName: { type: String },
        itemNameml: { type: String },
        groupName: { type: String },
        purchaseRate: { type: String },
        salesRate: { type: String },
        mrp: { type: String },
        minRate: { type: String },
        cgst: { type: String },
        sgst: { type: String },
        opStock: { type: String },
        baseUom: { type: String },
        brand: { type: String },
        qty: { type: String },
        location: { type: String },
        expiryDays: { type: String },
        isService: { type: String },
        hasBatch: { type: String },
        hasSerialNo: { type: String },
        hasWarranty: { type: String },
        rawMaterials: { type: String },
        salesItem: { type: String },
        stockTracking: { type: String },
        expiredItem: { type: String },
        FMP: { type: String },
    }],
    customerData: [{
        sl_no: { type: Number },
        invoiceNumber: { type: String },
        schemePurchaseId: { type: String},
        referenceName: { type: String},
        referenceId:{ type: String},
        customerType: { type: String },
        customerId: { type: String },
        customerName: { type: String },
        date: { type: String },
        guardianName: { type: String },
        relation: { type: String },
        address: { type: String },
        customerMobile: { type: String },
        telephoneNo: { type: String },
        amount: { type: String },
        referenceName: { type: String },
        referenceMobile: { type: String },
        dateOfBirth: { type: Date },
        age: { type: Number },
        bloodGroup: { type: String },
        profession: { type: String },
        district: { type: String },
        taluk: { type: String },
        cityVillageName: { type: String },
        panchayathName: { type: String },
        postalCityName: { type: String },
        pinCode: { type: String },
        email: { type: String },
        annualIncome: { type: String },
        caste: { type: String },
        subCaste: { type: String },
        gender: { type: String },
        maritalStatus: { type: String },
        nomineeName: { type: String },
        nomineeMobile: { type: String },
        nomineeRelation: { type: String },
        userName: { type: String },
        userTime: { type: String },
        aadharNumber: { type: String },
        aadharFrontImage: { type: String },
        aadharBackImage: { type: String },
        panNumber: { type: String },
        panImage: { type: String },
        selectedPaymentMethod: { type: String },
        transactionId: { type: String },
        cashTransactionId: { type: String },
        transactionTime: { type: String },
        signatureImage: { type: String },
        receiptNumber: { type: String },
        BankName: { type: String },
        AccountNo: { type: String },
        BranchName: { type: String },
        ifsc: { type: String }
    }]
});

module.exports = mongoose.model('SchemeStock', SchemeSchema);